======================================[0726]======================================

ㅁ 윈도우 - 프리퍼런스 - enc검색해서 모두 UTF-8로 변경

ㅁ 톰캣연결: 윈도우 - 프리퍼런스 - 서버탭안에 runtime environments - add - 톰캣7.0
   - browse - "E:\B_Util\5.ApacheTomcat\apache-tomcat-7.0.73" 선택 - Finish
   - 확인(Apply and Close)

ㅁ 톰캣: 하단의 Servers 탭에서 New Server클릭 - 톰캣7.0클릭 - next - Finish
   - 프로젝트익스플로러에 Tomcat 7.0안의 server.xml 실행
   - 하단의 Source탭 선택
   - 65줄에 port="80"로 변경, URIEncoding="UTF-8" 추가

ㅁ 프로젝트 생성 Dynamic Web Project선택 - 이름 jqpro, 타겟런타임 7.0확인
	- next - next - Generate web.xml deployment descriptor 체크 - Finish

ㅁ 프로젝트 내용
   - src: java
   - WebContent: html, css, javasc, image

ㅁ WebContent - WEB-INF - web.xml에는 서버 실행시 실행될 것을 설정

ㅁ 프로젝트 실행(Ctrl+F11)할 때 크롬창으로 뜨게 하기
   - Window - Web Browser - Chrome (없으면 window - preferences
   - "Web Browser"검색 - New클릭 - name:크롬, location: 크롬의위치
     (C:\Users\PC-15\AppData\Local\Google\Chrome\Application\chrome.exe), 확인

----------------------------------------------------------------------------------

ㅁ jQuery
   - 능력단위
	1. 화면설계
	   평가과제 3개
	2. 화면구현
	   평가과제 1개

ㅁ jQuery란
   - javascript를 쉽게 쓸 수 있도록 만든 라이브러리
   - 대체용이 아님. 혼용 가능

ㅁ 사용법
   1. 다운로드하는 방법
	- 인터넷익스플로러 https://jquery.com/download/에서 두 가지 다운로드
	Download the compressed, production jQuery 3.4.1    -> 줄바꿈x 축약o 용량적음 에러적음
	Download the uncompressed, development jQuery 3.4.1 -> 줄바꿈o 축약x 용량큼   에러많음
		==> jquery-3.4.1.min.js(위 파일)가 에러가 적어서 이것만 사용.
		==> <script src = "../js/jquery-3.4.1.min.js"></script> 넣어주기
	-> 다운받은 파일을 WebContent -> js폴더를 생성해서 넣어주기(min만 넣기)
   2. 실행시마다 구글등에서 jQuery파일을 포함하는 방법(CDN:Content Delivery Network방식)

ㅁ html실행순서: script -> body -> style ★

ㅁ jQuery문장구조1
   - javascript
     var hlist = document.getElementsByTagName("h1")
     hlist[0].style.backgroundColor = "yellow";
     hlist[0].style.color ="yellow";
   - jQuery
     $('h1').css('background-color', 'yellow'); // jq1:eq(1).css()로 한 클래스만 css를 줄 수 있다.
     $('h1').css('color', 'blue');
     // 메소드 체이닝(Method Chaining)
     $('h1').css('background-color', 'yellow').css('color', 'blue');

ㅁ jQuery Core1
   - $( ): jQuery 함수, 다른 함수를 전달하면 문서가 로드될 때 호출될 콜백함수를 등록
	   window.onload이벤트와 유사
	$(function() {
		$('h1').css('background', 'yellow');
	});

ㅁ jQuery Core2
   - $(선택자[, 컨텍스트]): 선택자로 작업대상 엘리먼트를 검색한다.
     var myJquery1 = $('p');
     var myJquery2 = $('p', document.forms[2]); 
     $('p', this)  ->  this안에 p (this가 부모가 됨)  ★★

ㅁ jQuery Core3
   - $(element): DOM 엘리먼트를 인수로 전달하면 이 객체를 감싸는
     jQuery 객체를 리턴 . jQuery 메소드 사용가능

ㅁ jQuery Core4
   - var elem = document.getElementsByTagName('h1')[0];
     getElementsByTagName 메서드가  리턴하는 것은 DOM객체 배열이며
     elem은 DOM객체이다
     DOM 객체에 대해 css나 text같은 Jquery 메소드를 직접 호출할 수 없다 
     그래서 이객체를 $()함수로 전달하여 Jquery 객체로 랩핑하면 
     여러가지 편리한 jQuery 메소드를 호출 할 수 있다 





======================================[0729]======================================

ㅁ jQuery Core5
   - $(“html”), $(“html”, {propertis})
     인수로 전달된 html문자열로 새로운 엘리먼트를 직접 생성한다 
     생성된 엘리먼트를 DOM트리의 원하는 부분에 삽입하여 실행중에 문서를 만들 수 있다 

ㅁ jQuery Core6
   - $(document).ready(function() {
         $("<div/>", {
             "class" : "test",
             "text"  : "Click Me",
             "click" : function(){
                 alert("클릭 했습니다 ");
	     }
         }).appendTo("body");

ㅁ jQuery Core 7
   - alert($("body").html());  // body 태그 안의 모든 태그를 포함한 문장 
   - alert($("body").text());  // body 태그안의 모든 문자만 

   - alert($("p").text());  // 여러개인경우 모든 p태그의 문자만  
   - alert($("p").html());  // p가  여러개인경우  첫번째 인거만 태그를 포함한 문장

ㅁ jQuery Core 8(객체조작)
   - $("p").length;   -- p엘리먼트의 개수 
   - 반복문 
        > $('선택자').each(function(매개변수1, 매개변수2){}) // 매개변수 생략가능
	> $.each('선택자', function(매개변수1, 매개변수2){}) // 매개변수 생략가능
	  * 매개변수1: 인덱스를 나타냄
	  * 매개변수2: 인덱스번째의 변수
          * 검색된 DOM요소의 개수만큼 지정된 fn함수를 호출한다 

ㅁ jQuery Core 10
   - get(), get(N), [N] --> jQuery 객체에 대해 dom 메소드 호출 해야 하는 경우 
   - get()함수는 매치되는 DOM요소들을 배열로 반환한다.
   - get(N)함수는 DOM요소 배열에서 N번째 요소를 반환한다. ([N]와 같다.)
   - N이 배열 범위를 넘을 경우 “undefined”를 반환한다.
   - 배열의 첨자는 0부터 시작된다.
	<script>
		var jqObj  = $(‘h1’);
		var domElem = jqObj.get(0);
		domElem.style.backgroundColor =‘yellow’;
	</script>





======================================[0730]======================================

ㅁ 선택자
   - E1.class: E1 요소 중 class속성값이 class와 같은 모든 요소
   - E1#id   : E1 요소 중 ID속성값이 id와 같은 요소
   - E1 E2   : E1의 자식 요소 중 모든 E2 요소(후손)
   - E1 > E2 : E1의 바로 아래 자식요소 중 모든 E2 요소(자식)
   - E1 + E2 : E1의 바로 다음에 나오는 형제요소 중 E2 요소(하나)
   - E1 ~ E2 : E1의 다음에 나오는 형제요소 중 모든 E2 요소(모두)

ㅁ 선택자 - 속성관련
   - E1[attr]     : attr속성을 갖는 모든 E1 요소
   - E1[attr=val] : attr속성값이 val인 모든 E1 요소
   - E1[attr^=val]: attr속성값이 val로 시작하는 모든 E1 요소
   - E1[attr!=val]: attr속성값이 val값과 같지 않은 모든 E1 요소
   - E1[attr$=val]: attr속성값이 val로 끝나는 모든 E1 요소
   - E1[attr*=val]: attr속성값이 val을 포함하는 모든 E1 요소
   - E1[attr|=val]: attr속성값이 val과 같거나 'val-'로 시작하는 모든 E1 요소
   - E1[attr~=val]: attr속성값이 공백으로 구분된 값을 가질 경우 구분된 값 중에
                    val값과 같은 값을 갖는 모든 E1 요소

ㅁ 선택자 - 입력양식(Form)
   - :input   : 모든 input, textarea, select, button요소들과 일치(모든 input타입)
   - :text    : text 타입의 모든 input 요소들과 일치
   - :password: password 타입의 모든 input 요소들과 일치
   - :radio   : radio 타입의 모든 input 요소들과 일치
   - :checkbox: checkbox 타입의 모든 input 요소들과 일치
   - :submit  : submit 타입의 모든 input 요소들과 일치
   - :image   : image 타입의 모든 input 요소들과 일치
   - :reset   : reset 타입의 모든 input 요소들과 일치
   - :button  : 모든 button 요소들과 bbuton 타입의 모든 input 요소들과 일치
   - :file    : file 타입의 모든 input 요소들과 일치

ㅁ 필터1 - 기본필터
   - :first        : 선택된 개체들 중 첫 번째 요소와 일치
   - :last         : 선택된 개체들 중 마지막 요소와 일치
   - :not(selector): 괄호에 주어진 셀렉터와 일치되는 모든 요소를 제외
   - :even         : 짝수 요소들과 일치(0부터 시작)
   - :odd          : 홀수 요소들과 일치(0부터 시작)
   - :eq(index)    : 인덱스에 해당하는 단일 요소와 일치
   - :gt(index)    : 주어진 인덱스보다 큰 인덱스를 갖는 모든 요소
   - :lt(index)    : 주어진 인덱스보다 작은 인덱스를 갖는 모든 요소
   - :header       : 모든 헤더 요소들(h1, h2, h3 등)과 일치
   - :animated     : 현재 애니메이션이 동작중인 모든 요소와 일치





======================================[0731]======================================

ㅁ 필터2 - 내용필터
   - :contains(text): 지정한 텍스트를 포함하는 요소들
                     (대소문자 구분, 자식 요소 텍스트까지 검색)
   - :not(:conains(text)): 지정한 텍스트를 포함되지 않는 요소들
   - :empty         : 대상 요소 중 자식 요소가 없고 텍스트도 가지지 않는 요소들
   - :has(selector) : 지정된 셀렉터에 해당하는 요소를 갖는 모든 요소들과 일치
   - :parent        : 대상 요소 중 자식 요소를 갖거나 텍스트를 갖는 요소들이 해당

ㅁ getter
   - $(selector).html();
   - $(selector).text();
   - $(selector).val(); --> input, textarea, select option, checkbox, radio

ㅁ setter
   - $(selector).html("문자열"); --> 선택자에 의해 선택된 엘리먼트의 내용(contents)을
                                     지정한 '문자열'로 변경한다.
   - $(selector).text("문자열"); --> 선택자에 의해 선택된 엘리먼트의 내용(contents)을
                                     지정한 '문자열'로 변경한다.
                                     문자열에 HTML코드가 있어도 해석되지 않고 문자열로
                                     인식하여 그대로 나타난다.
   - $(selector).val("값");   

ㅁ 필터3 - 자식필터
   - :nth-child  : 자식 중 index로 지정된 위치의 요소들과 일치되거나, even(짝수), odd 
    (index/even/   (홀수)번째에 해당하는 자식들과 일치(단, index는 1부터 시작)
     odd/equation)
   - :first-child: 첫 번째 자식인 모든 요소와 일치
   - :last-child : 마지막 자식인 모든 요소와 일치
   - :only-child : 자신이 부모 요소의 유일한 자식인 모든 요소와 일치 

ㅁ 필터4 - Form상태
   - :enabled : 현재 enable 상태인 모든 요소와 일치 --> $('form :enabled').css
   - :disabled: 현재 disable 상태인 모든 요소와 일치
   - :checked : 체크된 모든 요소들과 일치 --> $('checkbox:checked').css
   - :selected: 선택된 모든 요소들과 일치 --> $('option:selected').css

★ attr(), val(), prop()
   - $(선택자).attr("속성명"): 선택자에 의해 선택된 요소의 "속성명"에 설정된
                               속성값을 읽어온다.
   - $(선택자).attr("속성명", "값"): 선택자에 의해 선택된 요소의 "속성명"에
                                     "값"을 설정한다.

   - $(선택자).val(): 선택자에 의해 선택된 요소의 value속성의 값을 읽어온다.
            (단, form의 하위객체에서만 사용가능) --> input요소, select, textarea
   - $(선택자).val(값): 선택자에 의해 선택된 객체의 value속성에 '값'을 설정한다.

   - prop(): "속성=값"인 것(disabled, enabled 등)
	> $('#btn1').prop('disabled', true);
	> $('#btn2').prop('disabled', false);

   - ex) <select name="spring" id="spring" multiple size="6">
         name, id, size는 attr / spring, spring, 6은 val / multiple은 prop 

★ 반복문
	$('input[type=button]').click(function() {
		res = "";
		
		// 반복문 i는 index, a=checkbox:checked[i]
		$(':checkbox:checked').each(function(i, a) {
			//res += $(this).val() + " ";
			res += $(a).val() + " ";
		})
		
		alert(res);
	})

ㅁ 필터5 - 기타 필터
   - :hidden : hidden 상태인 모든 요소들
      > display:none; 인 것
      > type="hidden"; 인 것
      > width:0; height:0; 인 것
      > 부모 요소가 hidden 인 것
      > visibility:hidden or opacity:0 은 보이는 것으로 간주
   - :visible: visible 상태인 모든 요소들
      > display:none; 이 아닌 것
      > type="hidden"; 이 아닌 것
      > width:0; height:0; 이 아닌 것
      > 부모 요소가 hidden 이 아닌 것
      > visibility:hidden or opacity:0 은 보이는 것으로 간주





======================================[0801]======================================

ㅁ 내용 확인 및 변경 메소드
   - html(): 일치된 요소의 html 내용을 가져온다. 이는 요소의 innerHTML 값과 동일하다.
             만일, 일치된 요소가 여러 개라면 그 중 첫 번째 요소의 HTML을 가져온다.
   - html(value): 일치된 요소의 html 본문을 value 값으로 설정한다.
                  만일, 일치된 요소가 여러 개라면 모든 요소에 작업을 수행한다.
   - text(): 일치된 모든 요소의 텍스트를 합쳐서 가져온다.
   - text(value): 모든 일치된 요소의 텍스트를 value 값으로 설정한다.
   - val(): 해당 입력요소(Form)의 value속성의 값을 가져온다.
   - val(data): 해당 입력요소(Form)의 value속성에 data를 설정한다.

ㅁ 요소 내부에 추가하는 메소드
   - append(content): 일치된 요소 내부의 마지막 위치에 content를 추가한다.
   - appentTo(selector): 선택된 요소를 selector에 일치된 모든 요소들의 내부 마지막
                         위치에 추가한다. 만일, 일치된 요소가 본문에 존재하면 그
                         요소를 제거한 후 복사한다. (즉, 이동)
   - prepend(content): append(content)와 동일. 다만, 내부의 처음위치에 추가한다.
   - prependTo(selector): appendTo(selector)와 동일. 다만, 내부의 처음위치에 추가한다.

ㅁ 요소 외부에 추가하는 메소드
   - after(content): 일치된 요소 뒤에 content를 삽입한다. 요소 내부가 아닌 외부에
                     삽입한다.
   - insertAfter(selector): 선택된 요소를 selector에 의해 일치된 모든 요소들 뒤쪽에
                            삽입한다. 요소 내부가 아닌 외부에 삽입된다.
   - before(content): 일치된 요소 앞에 content를 삽입한다.
                      요소 내부가 아닌 외부에 삽입된다.
   - insertBefore(selector): insertAfter(selector)와 유사하나, 요소 앞쪽에 삽입한다.
                             요소 내부가 아닌 외부에 삽입된다.

ㅁ HTML로 감싸는 메소드
   - wrap(html): 일치된 요소 각각을 html로 감싼다.
   - wrapAll(html): 일치된 요소 전체를 한꺼번에 html로 감싼다.

ㅁ 삭제 메소드
   - empty(): 일치된 모든 요소들의 자식 Content를 삭제한다.
   - remove(): 일치된 모든 요소들을 DOM에서 삭제한다.
   - remove(selector): 일치되는 요소 중 selector에 일치하는 요소를 삭제한다.
   - detach(): remove()와 같지만 이벤트 핸들러등의 정보는 삭제되지 않는다.

ㅁ 복사 메소드
   - clone(): 일치된 요소를 복사하고, 그를 선택한다.
   - clone(bool): 이벤트 처리기를 포함하여 DOM 요소를 복사하고 그를 선택한다.

ㅁ 필터링 메소드
   - ?? ppt에 없음





======================================[0802]======================================







































